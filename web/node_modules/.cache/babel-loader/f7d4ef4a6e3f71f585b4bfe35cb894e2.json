{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hyejin Kim\\\\Documents\\\\Programming\\\\Chatapp\\\\\\uC138\\uBC88\\uC9F8- \\uB9AC\\uC561\\uD2B8,CSS\\\\my-chat-app-3\\\\web\\\\src\\\\components\\\\TextEditor1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, memo, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TextEditor1 = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    quillRef,\n    htmlContent,\n    setHtmlContent\n  } = _ref;\n  useEffect(() => {\n    const handleImage = () => {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'file');\n      input.setAttribute('accept', 'image/*');\n      input.click();\n\n      input.onchange = async () => {\n        const file = input.files[0]; // 현재 커서 위치 저장\n\n        const range = getEditor().getSelection(true); // // 서버에 올려질때까지 표시할 로딩 placeholder 삽입\n        // getEditor().insertEmbed(range.index, \"image\", `/images/loading.gif`);\n        // try {\n        //   // 필자는 파이어 스토어에 저장하기 때문에 이런식으로 유틸함수를 따로 만들어줬다\n        //   // 이런식으로 서버에 업로드 한뒤 이미지 태그에 삽입할 url을 반환받도록 구현하면 된다\n        //   const filePath = `contents/temp/${Date.now()}`;\n        //   const url = await uploadImage(file, filePath);\n        //   // 정상적으로 업로드 됐다면 로딩 placeholder 삭제\n        //   getEditor().deleteText(range.index, 1);\n        //   // 받아온 url을 이미지 태그에 삽입\n        //   getEditor().insertEmbed(range.index, \"image\", url);\n        //   // 사용자 편의를 위해 커서 이미지 오른쪽으로 이동\n        //   getEditor().setSelection(range.index + 1);\n        // } catch (e) {\n        //   getEditor().deleteText(range.index, 1);\n        // }\n      };\n    };\n\n    if (quillRef.current) {\n      const {\n        getEditor\n      } = quillRef.current;\n      const toolbar = quillRef.current.getEditor().getModule('toolbar');\n      toolbar.addHandler('image', handleImage);\n    }\n  }, []);\n  const modules = useMemo(() => ({\n    toolbar: {\n      container: [[{\n        header: [1, 2, 3, 4, 5, 6, false]\n      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n        list: 'ordered'\n      }, {\n        list: 'bullet'\n      }, {\n        indent: '-1'\n      }, {\n        indent: '+1'\n      }], [({\n        align: []\n      }, {\n        color: []\n      }, {\n        background: []\n      })], ['link', 'image', 'video']]\n    }\n  }), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      modules: { ...modules,\n        imageResize: {\n          parchment: Quill.import('parchment'),\n          modules: ['Resize', 'DisplaySize', 'Toolbar']\n        }\n      },\n      ref: quillRef,\n      value: htmlContent,\n      onChange: setHtmlContent,\n      theme: \"snow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"pEEtdCqPOTfetRbqLsHQmwFMflY=\")), \"pEEtdCqPOTfetRbqLsHQmwFMflY=\");\n\n_c2 = TextEditor1;\nexport default TextEditor1;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextEditor1$memo\");\n$RefreshReg$(_c2, \"TextEditor1\");","map":{"version":3,"names":["React","useMemo","memo","useEffect","ReactQuill","TextEditor1","quillRef","htmlContent","setHtmlContent","handleImage","input","document","createElement","setAttribute","click","onchange","file","files","range","getEditor","getSelection","current","toolbar","getModule","addHandler","modules","container","header","list","indent","align","color","background","imageResize","parchment","Quill","import"],"sources":["C:/Users/Hyejin Kim/Documents/Programming/Chatapp/세번째- 리액트,CSS/my-chat-app-3/web/src/components/TextEditor1.js"],"sourcesContent":["import React, { useMemo, memo, useEffect } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst TextEditor1 = memo(({ quillRef, htmlContent, setHtmlContent }) => {\r\n  useEffect(() => {\r\n    const handleImage = () => {\r\n      const input = document.createElement('input');\r\n      input.setAttribute('type', 'file');\r\n      input.setAttribute('accept', 'image/*');\r\n      input.click();\r\n      input.onchange = async () => {\r\n        const file = input.files[0];\r\n\r\n        // 현재 커서 위치 저장\r\n        const range = getEditor().getSelection(true);\r\n\r\n        // // 서버에 올려질때까지 표시할 로딩 placeholder 삽입\r\n        // getEditor().insertEmbed(range.index, \"image\", `/images/loading.gif`);\r\n\r\n        // try {\r\n        //   // 필자는 파이어 스토어에 저장하기 때문에 이런식으로 유틸함수를 따로 만들어줬다\r\n        //   // 이런식으로 서버에 업로드 한뒤 이미지 태그에 삽입할 url을 반환받도록 구현하면 된다\r\n        //   const filePath = `contents/temp/${Date.now()}`;\r\n        //   const url = await uploadImage(file, filePath);\r\n\r\n        //   // 정상적으로 업로드 됐다면 로딩 placeholder 삭제\r\n        //   getEditor().deleteText(range.index, 1);\r\n        //   // 받아온 url을 이미지 태그에 삽입\r\n        //   getEditor().insertEmbed(range.index, \"image\", url);\r\n\r\n        //   // 사용자 편의를 위해 커서 이미지 오른쪽으로 이동\r\n        //   getEditor().setSelection(range.index + 1);\r\n        // } catch (e) {\r\n        //   getEditor().deleteText(range.index, 1);\r\n        // }\r\n      };\r\n    };\r\n\r\n    if (quillRef.current) {\r\n      const { getEditor } = quillRef.current;\r\n      const toolbar = quillRef.current.getEditor().getModule('toolbar');\r\n      toolbar.addHandler('image', handleImage);\r\n    }\r\n  }, []);\r\n\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: {\r\n        container: [\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n          [\r\n            { list: 'ordered' },\r\n            { list: 'bullet' },\r\n            { indent: '-1' },\r\n            { indent: '+1' },\r\n          ],\r\n          [({ align: [] }, { color: [] }, { background: [] })],\r\n          ['link', 'image', 'video'],\r\n        ],\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ReactQuill\r\n        modules={{\r\n          ...modules,\r\n          imageResize: {\r\n            parchment: Quill.import('parchment'),\r\n            modules: ['Resize', 'DisplaySize', 'Toolbar'],\r\n          },\r\n        }}\r\n        ref={quillRef}\r\n        value={htmlContent}\r\n        onChange={setHtmlContent}\r\n        theme=\"snow\"\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TextEditor1;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;;;;AAEA,MAAMC,WAAW,iCAAGH,IAAI,SAAC,QAA+C;EAAA;;EAAA,IAA9C;IAAEI,QAAF;IAAYC,WAAZ;IAAyBC;EAAzB,CAA8C;EACtEL,SAAS,CAAC,MAAM;IACd,MAAMM,WAAW,GAAG,MAAM;MACxB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;MACAF,KAAK,CAACG,YAAN,CAAmB,MAAnB,EAA2B,MAA3B;MACAH,KAAK,CAACG,YAAN,CAAmB,QAAnB,EAA6B,SAA7B;MACAH,KAAK,CAACI,KAAN;;MACAJ,KAAK,CAACK,QAAN,GAAiB,YAAY;QAC3B,MAAMC,IAAI,GAAGN,KAAK,CAACO,KAAN,CAAY,CAAZ,CAAb,CAD2B,CAG3B;;QACA,MAAMC,KAAK,GAAGC,SAAS,GAAGC,YAAZ,CAAyB,IAAzB,CAAd,CAJ2B,CAM3B;QACA;QAEA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;MACD,CAzBD;IA0BD,CA/BD;;IAiCA,IAAId,QAAQ,CAACe,OAAb,EAAsB;MACpB,MAAM;QAAEF;MAAF,IAAgBb,QAAQ,CAACe,OAA/B;MACA,MAAMC,OAAO,GAAGhB,QAAQ,CAACe,OAAT,CAAiBF,SAAjB,GAA6BI,SAA7B,CAAuC,SAAvC,CAAhB;MACAD,OAAO,CAACE,UAAR,CAAmB,OAAnB,EAA4Bf,WAA5B;IACD;EACF,CAvCQ,EAuCN,EAvCM,CAAT;EAyCA,MAAMgB,OAAO,GAAGxB,OAAO,CACrB,OAAO;IACLqB,OAAO,EAAE;MACPI,SAAS,EAAE,CACT,CAAC;QAAEC,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAnB;MAAV,CAAD,CADS,EAET,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAFS,EAGT,CACE;QAAEC,IAAI,EAAE;MAAR,CADF,EAEE;QAAEA,IAAI,EAAE;MAAR,CAFF,EAGE;QAAEC,MAAM,EAAE;MAAV,CAHF,EAIE;QAAEA,MAAM,EAAE;MAAV,CAJF,CAHS,EAST,EAAE;QAAEC,KAAK,EAAE;MAAT,GAAe;QAAEC,KAAK,EAAE;MAAT,CAAf,EAA8B;QAAEC,UAAU,EAAE;MAAd,CAAhC,EATS,EAUT,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAVS;IADJ;EADJ,CAAP,CADqB,EAiBrB,EAjBqB,CAAvB;EAoBA,oBACE;IAAA,uBACE,QAAC,UAAD;MACE,OAAO,EAAE,EACP,GAAGP,OADI;QAEPQ,WAAW,EAAE;UACXC,SAAS,EAAEC,KAAK,CAACC,MAAN,CAAa,WAAb,CADA;UAEXX,OAAO,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,SAA1B;QAFE;MAFN,CADX;MAQE,GAAG,EAAEnB,QARP;MASE,KAAK,EAAEC,WATT;MAUE,QAAQ,EAAEC,cAVZ;MAWE,KAAK,EAAC;IAXR;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAiBD,CA/EuB,kCAAP,iCAAjB;;MAAMH,W;AAiFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}